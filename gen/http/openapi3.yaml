openapi: 3.0.3
info:
  title: Calculator Service
  description: Service for multiplying numbers, a Goa teaser
  version: "1.0"
servers:
- url: http://localhost:8000
paths:
  /add/{a}/{b}:
    get:
      tags:
      - calc
      summary: add calc
      operationId: calc#add
      parameters:
      - name: a
        in: path
        description: Left operand
        required: true
        schema:
          type: integer
          description: Left operand
          example: 1357111879278570563
          format: int64
        example: 1944403076966468488
      - name: b
        in: path
        description: Right operand
        required: true
        schema:
          type: integer
          description: Right operand
          example: 8502600731307065034
          format: int64
        example: 4684098525035522116
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 857094420678700918
                format: int64
              example: 2175071851789637083
  /divide/{a}/{b}:
    get:
      tags:
      - calc
      summary: divide calc
      operationId: calc#divide
      parameters:
      - name: a
        in: path
        description: Left operand
        required: true
        schema:
          type: integer
          description: Left operand
          example: 9181821485886476748
          format: int64
        example: 2625816219679266093
      - name: b
        in: path
        description: Right operand
        required: true
        schema:
          type: integer
          description: Right operand
          example: 590789176751244985
          format: int64
        example: 271168432729687906
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: number
                example: 0.29971114866533977
                format: double
              example: 0.1276392035568775
  /multiply/{a}/{b}:
    get:
      tags:
      - calc
      summary: multiply calc
      operationId: calc#multiply
      parameters:
      - name: a
        in: path
        description: Left operand
        required: true
        schema:
          type: integer
          description: Left operand
          example: 6473259481718754824
          format: int64
        example: 6224278692501446182
      - name: b
        in: path
        description: Right operand
        required: true
        schema:
          type: integer
          description: Right operand
          example: 1663161643268787985
          format: int64
        example: 6299444053676092659
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 7372181875126382825
                format: int64
              example: 2626203793042827726
  /note/{uuid}:
    delete:
      tags:
      - calc
      summary: deleteNote calc
      operationId: calc#deleteNote
      parameters:
      - name: uuid
        in: path
        description: The uuid for the note
        required: true
        schema:
          type: string
          description: The uuid for the note
          example: Eos eaque quis illum error voluptatem.
        example: Dolore et autem quam quo officiis.
      responses:
        "204":
          description: No Content response.
        "404":
          description: Not Found response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
    get:
      tags:
      - calc
      summary: getNote calc
      operationId: calc#getNote
      parameters:
      - name: uuid
        in: path
        description: The note's UUID
        required: true
        schema:
          type: string
          description: The note's UUID
          example: Ut corporis nihil.
        example: Eveniet et ipsa nihil.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNoteResponseBody'
              example:
                Note:
                  Body: Ut rerum ipsam eveniet.
                  Title: Non quod et facere.
                  UUID: Omnis velit laboriosam unde omnis incidunt.
        "404":
          description: Not Found response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /note/create/{userID}:
    post:
      tags:
      - calc
      summary: createNote calc
      operationId: calc#createNote
      parameters:
      - name: userID
        in: path
        description: The UserID for the note
        required: true
        schema:
          type: string
          description: The UserID for the note
          example: Repellendus quod nostrum.
        example: In quidem maxime eos doloremque impedit.
      requestBody:
        description: The Note data to be saved
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteDetails'
            example:
              Body: Quia dolores consequatur cum itaque.
              Title: Officiis rerum.
      responses:
        "201":
          description: Created response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNoteResponseBody'
              example:
                NoteResponse:
                  UUID: Ea ut enim aut.
        "400":
          description: Bad Request response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /notes/{userID}:
    get:
      tags:
      - calc
      summary: getNotes calc
      operationId: calc#getNotes
      parameters:
      - name: userID
        in: path
        description: The email of the user
        required: true
        schema:
          type: string
          description: The email of the user
          example: Repellendus nam excepturi blanditiis mollitia eos quas.
        example: Enim dolor.
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotesResponseBody'
              example:
                notes:
                - Body: Ut rerum ipsam eveniet.
                  Title: Non quod et facere.
                  UUID: Omnis velit laboriosam unde omnis incidunt.
                - Body: Ut rerum ipsam eveniet.
                  Title: Non quod et facere.
                  UUID: Omnis velit laboriosam unde omnis incidunt.
        "404":
          description: Not Found response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /openapi.json:
    get:
      tags:
      - calc
      summary: Download ./gen/http/openapi.json
      operationId: calc#/openapi.json
      responses:
        "200":
          description: File downloaded
  /subtract/{a}/{b}:
    get:
      tags:
      - calc
      summary: subtract calc
      operationId: calc#subtract
      parameters:
      - name: a
        in: path
        description: Left operand
        required: true
        schema:
          type: integer
          description: Left operand
          example: 4944037219837949927
          format: int64
        example: 6900749919996029500
      - name: b
        in: path
        description: Right operand
        required: true
        schema:
          type: integer
          description: Right operand
          example: 7935161719722942308
          format: int64
        example: 8671084678997159237
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: integer
                example: 2397875620162332677
                format: int64
              example: 7886570427086943347
components:
  schemas:
    CreateNoteResponseBody:
      type: object
      properties:
        NoteResponse:
          $ref: '#/components/schemas/NoteResponse'
      example:
        NoteResponse:
          UUID: Ea ut enim aut.
      required:
      - NoteResponse
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: true
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: false
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: true
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    GetNoteResponseBody:
      type: object
      properties:
        Note:
          $ref: '#/components/schemas/Note'
      example:
        Note:
          Body: Ut rerum ipsam eveniet.
          Title: Non quod et facere.
          UUID: Omnis velit laboriosam unde omnis incidunt.
    GetNotesResponseBody:
      type: object
      properties:
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: list of notes
          example:
          - Body: Ut rerum ipsam eveniet.
            Title: Non quod et facere.
            UUID: Omnis velit laboriosam unde omnis incidunt.
          - Body: Ut rerum ipsam eveniet.
            Title: Non quod et facere.
            UUID: Omnis velit laboriosam unde omnis incidunt.
          - Body: Ut rerum ipsam eveniet.
            Title: Non quod et facere.
            UUID: Omnis velit laboriosam unde omnis incidunt.
      example:
        notes:
        - Body: Ut rerum ipsam eveniet.
          Title: Non quod et facere.
          UUID: Omnis velit laboriosam unde omnis incidunt.
        - Body: Ut rerum ipsam eveniet.
          Title: Non quod et facere.
          UUID: Omnis velit laboriosam unde omnis incidunt.
        - Body: Ut rerum ipsam eveniet.
          Title: Non quod et facere.
          UUID: Omnis velit laboriosam unde omnis incidunt.
    Note:
      type: object
      properties:
        Body:
          type: string
          description: The Body of the Note
          example: Sed ratione aliquam quia.
        Title:
          type: string
          description: The title of the Note
          example: Quo quidem voluptas excepturi beatae qui occaecati.
        UUID:
          type: string
          description: The UUID of the created note
          example: Odit temporibus ut.
      example:
        Body: Et ullam qui.
        Title: Et sed fuga eos.
        UUID: Consequatur sapiente aut unde.
    NoteDetails:
      type: object
      properties:
        Body:
          type: string
          description: The Body of the Note
          example: Officiis non culpa dolores.
        Title:
          type: string
          description: The title of the Note
          example: Est repellendus asperiores non veritatis tenetur qui.
      example:
        Body: Vitae culpa ullam autem magni.
        Title: Odio nemo eligendi officiis nihil.
    NoteResponse:
      type: object
      properties:
        UUID:
          type: string
          description: The UUID of the Created Note
          example: Harum dolor error quibusdam accusantium.
      example:
        UUID: At quis quae itaque.
tags:
- name: calc
  description: The calc service performs operations on numbers.
